% This script is written and read by pdetool and should NOT be edited.
% There are two recommended alternatives:
% 1) Export the required variables from pdetool and create a MATLAB script
%    to perform operations on these.
% 2) Define the problem completely using a MATLAB script. See
%    http://www.mathworks.com/help/pde/examples/index.html for examples
%    of this approach.
function pdemodel
[pde_fig,ax]=pdeinit;
pdetool('appl_cb',3);
pdetool('snapon','on');
set(ax,'DataAspectRatio',[1 1.5 1]);
set(ax,'PlotBoxAspectRatio',[1.5 1 2.8846153846153846]);
set(ax,'XLim',[-0.040000000000000001 1]);
set(ax,'YLim',[-0.040000000000000001 1]);
set(ax,'XTickMode','auto');
set(ax,'YTickMode','auto');
pdetool('gridon','on');

% Geometry description:
pdepoly([ 0,...
 0,...
 0.90000000000000002,...
 0.90000000000000002,...
 0.70000000000000007,...
 0.70000000000000007,...
 0.20000000000000001,...
 0.20000000000000001,...
],...
[ 0,...
 0.60000000000000009,...
 0.60000000000000009,...
 0,...
 0,...
 0.30000000000000004,...
 0.30000000000000004,...
 0,...
],...
 'P1');
pdeellip(0.20000000000000001,0.30000000000000004,0.20000000000000001,0.30000000000000004,...
0,'E1');
pdeellip(0.70000000000000007,0.30000000000000004,0.19999999999999996,0.30000000000000004,...
0,'E2');
pderect([0 0.20000000000000001 0.60000000000000009 0.30000000000000004],'R1');
pderect([0.90000000000000002 0.70000000000000007 0.60000000000000009 0.30000000000000004],'R2');
pderect([0.20000000000000001 0.40000000000000002 0.30000000000000004 0],'R3');
pderect([0.70000000000000007 0.5 0.30000000000000004 0],'R4');
set(findobj(get(pde_fig,'Children'),'Tag','PDEEval'),'String','P1-(R1+R2)+E1-R3+E2-R4')

% Boundary conditions:
pdetool('changemode',0)
pdetool('removeb',[5 6 10 14 15 16 18 20 ]);
pdesetbd(12,...
'neu',...
2,...
char('0','0','0','0'),...
char('0','-1000'))
pdesetbd(11,...
'neu',...
2,...
char('0','0','0','0'),...
char('0','-1000'))
pdesetbd(10,...
'dir',...
2,...
char('0','0','0','0'),...
char('0','0'))
pdesetbd(9,...
'dir',...
2,...
char('1','0','0','1'),...
char('0','0'))
pdesetbd(8,...
'dir',...
2,...
char('1','0','0','1'),...
char('0','0'))
pdesetbd(7,...
'dir',...
2,...
char('0','0','0','0'),...
char('0','0'))
pdesetbd(6,...
'dir',...
2,...
char('0','0','0','0'),...
char('0','0'))
pdesetbd(5,...
'dir',...
2,...
char('0','0','0','0'),...
char('0','0'))
pdesetbd(4,...
'dir',...
2,...
char('0','0','0','0'),...
char('0','0'))
pdesetbd(3,...
'dir',...
2,...
char('0','0','0','0'),...
char('0','0'))
pdesetbd(2,...
'neu',...
2,...
char('0','0','0','0'),...
char('0','-3000'))
pdesetbd(1,...
'dir',...
2,...
char('0','0','0','0'),...
char('0','0'))

% Mesh generation:
setappdata(pde_fig,'Hgrad',1.3);
setappdata(pde_fig,'refinemethod','regular');
setappdata(pde_fig,'jiggle',char('on','mean',''));
setappdata(pde_fig,'MesherVersion','preR2013a');
pdetool('initmesh')

% PDE coefficients:
pdeseteq(1,...
char('2*((2E11)./(2*(1+(0.305))))+(2*((2E11)./(2*(1+(0.305)))).*(0.305)./(1-(0.305)))','0','(2E11)./(2*(1+(0.305)))','0','(2E11)./(2*(1+(0.305)))','2*((2E11)./(2*(1+(0.305)))).*(0.305)./(1-(0.305))','0','(2E11)./(2*(1+(0.305)))','0','2*((2E11)./(2*(1+(0.305))))+(2*((2E11)./(2*(1+(0.305)))).*(0.305)./(1-(0.305)))'),...
char('0.0','0.0','0.0','0.0'),...
char('0.0','0.0'),...
char('7480','0','0','7480'),...
'0:10',...
'0.0',...
'0.0',...
'[0 100]')
setappdata(pde_fig,'currparam',...
['2E11 ';...
'0.305';...
'0.0  ';...
'0.0  ';...
'7480 '])

% Solve parameters:
setappdata(pde_fig,'solveparam',...
char('0','1000','10','pdeadworst',...
'0.5','longest','0','1E-4','','fixed','Inf'))

% Plotflags and user data strings:
setappdata(pde_fig,'plotflags',[2 2 1 1 1 1 1 1 0 0 0 1 1 1 0 0 1 1]);
setappdata(pde_fig,'colstring','');
setappdata(pde_fig,'arrowstring','');
setappdata(pde_fig,'deformstring','');
setappdata(pde_fig,'heightstring','');

% Solve PDE:
pdetool('solve')
